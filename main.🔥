from max.graph import Graph, TensorType
from tensor import Tensor, TensorShape
from random import seed
from max.engine import InferenceSession

fn main() raises:
    var graph = Graph(TensorType(DType.float32, 'm', 2))
    var constant_value = Tensor[DType.float32](TensorShape(2,2), 42.0)
    print('Constant value: ', constant_value)
    var constant_symbol = graph.constant(constant_value)
    var mm = graph[0] @ constant_symbol
    graph.output(mm)
    graph.verify()
    var session = InferenceSession()
    var model = session.load(graph)

    seed(42)
    var input0 = Tensor[DType.float32].randn((3,2))
    var result = model.execute('input0', input0^)
    print("input0 result: ", result.get[DType.float32]('output0'))

    """
    var input1 = Tensor[DType.float32].randn((3,2))
    var result2 = model.execute('input1', input0^)
    print('input1 result: ', result2.get[DType.float32]('output0'))
    """
