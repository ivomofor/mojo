from max.graph import Graph, TensorType, ops 
from max.engine import InferenceSession
from tensor import TensorShape, Tensor

fn main() raises:
    var graph = Graph(TensorType(DType.float32, 4, 6))
    var matmul_constant_value = Tensor[DType.float32](TensorShape(6,7), 0.15)
    var matmul_constant = graph.constant(matmul_constant_value)
    var matmul = graph[0] @ matmul_constant
    var relu = ops.relu(matmul)
    var softmax = ops.softmax(relu)
    graph.output(softmax)

    var session = InferenceSession()
    var model = session.load(graph)

    var in_names = model.get_model_input_names()
    for names in in_names:
        print('Input: ', names[])

    var out_names = model.get_model_output_names()
    for names in out_names:
        print('Output: ', names[])
    var input = Tensor[DType.float32](TensorShape(4,6), 0.5)
    var result = model.execute('input0', input^)
    var output = result.get[DType.float32]('output0')
    print(output)

