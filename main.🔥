from max.graph import Graph, TensorType, Type
from max import engine 
from tensor import Tensor

fn main() raises:
    var graph = Graph(in_types = List[Type](TensorType(DType.float32, 1), TensorType(DType.float32, 2)))
    graph.output(graph[0] + graph[1])
    var session = engine.InferenceSession()
    var model = session.load(graph)
    for input_name in model.get_model_input_names():
        print(input_name[])
    var input0 = Tensor[DType.float32](List[Float32](1.0))
    print("input0:", input0)
    var input1 = Tensor[DType.float32](List[Float32](1.0, 1.0))
    print("input1:", input1)

    print("obtain the result using `get`:")
    var result =  model.execute("input0", input0^, "input1", input1^)
    print('...')
    print(result)
    print('result: ', result.get[DType.float32]("output0"))
    